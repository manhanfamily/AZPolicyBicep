{
  "name": "Deploy-Diagnostics-Website",
  "type": "Microsoft.Authorization/policyDefinitions",
  "apiVersion": "2021-06-01",
  "scope": null,
  "properties": {
    "policyType": "Custom",
    "displayName": "Deploy Diagnostic Settings for App Service to Log Analytics workspace and Storage Archive account",
    "description": "Deploys the diagnostic settings for Web App to stream to a Log Analytics workspace and Storage Archive account when any Web App which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled",
    "metadata": {
      "category": "Monitoring",
      "version": "2.0.0",
      "preview": false,
      "depreciated": false
    },
    "mode": "all",
    "parameters": {
      "profileName": {
        "type": "string",
        "metadata": {
          "displayName": "Profile name",
          "description": "The diagnostic settings profile name"
        },
        "defaultValue": "setByPolicy"
      },
      "evaluationDelay": {
        "type": "string",
        "metadata": {
          "displayName": "Evaluation Delay",
          "description": "Specifies when the existence of the related resources should be evaluated. The delay is only used for evaluations that are a result of a create or update resource request. Allowed values are AfterProvisioning, AfterProvisioningSuccess, AfterProvisioningFailure, or an ISO 8601 duration between 0 and 360 minutes."
        },
        "defaultValue": "AfterProvisioning"
      },
      "effect": {
        "type": "string",
        "metadata": {
          "displayName": "Effect",
          "description": "Enable or disable the execution of the policy"
        },
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists"
      },
      "logAnalytics": {
        "type": "string",
        "metadata": {
          "displayName": "Log Analytics workspace",
          "description": "Select the Log Analytics workspace from dropdown list",
          "strongType": "omsWorkspace",
          "assignPermissions": true
        }
      },
      "storageAccount": {
        "type": "String",
        "metadata": {
          "displayName": "Storage Account Resource ID",
          "description": "Resource ID of the Storage Account where logs should be archived.",
          "assignPermissions": true
        },
        "defaultValue": "/subscriptions/04bde172-2dac-46c7-88f2-2da78c7eb5e3/resourceGroups/rg-ae-plat-mgmt-diaglogging/providers/Microsoft.Storage/storageAccounts/staaeplatmgmtdiag3c24kqu"
      },
      "metricsEnabled": {
        "type": "string",
        "metadata": {
          "displayName": "Enable metrics",
          "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
        },
        "allowedValues": [
          "True",
          "False"
        ],
        "defaultValue": "True"
      },
      "logsEnabled": {
        "type": "string",
        "metadata": {
          "displayName": "Enable logs",
          "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
        },
        "allowedValues": [
          "True",
          "False"
        ],
        "defaultValue": "True"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "equals": "Microsoft.Web/sites"
          },
          {
            "field": "kind",
            "notLike": "functionapp*"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]",
        "details": {
          "type": "Microsoft.Insights/diagnosticSettings",
          "evaluationDelay": "[parameters('evaluationDelay')]",
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
            "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
          ],
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allof": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].Category",
                        "in": [
                            "AppServiceHTTPLogs",
                            "AppServiceConsoleLogs",
                            "AppServiceAppLogs",
                            "AppServiceAuditLogs",
                            "AppServiceIPSecAuditLogs",
                            "AppServicePlatformLogs"
                        ]
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].Enabled",
                        "equals": "True"
                      }
                    ]
                  }
                },
                "greater": 3
              },
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allof": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].Category",
                        "in": [
                          "AppServiceAuthenticationlogs"
                        ]
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].Enabled",
                        "equals": "False"
                      }
                    ]
                  }
                },
                "Equals": 1
              },
              {
                "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                "equals": "True"
              },
              {
                "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                "matchInsensitively": "[parameters('logAnalytics')]"
              },
              {
                "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                "equals": "[parameters('storageAccount')]"
              }
            ]
          },
          "deployment": {
            "properties": {
              "mode": "incremental",
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "profileName": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  },
                  "logAnalytics": {
                    "type": "string"
                  },
                  "storageAccount": {
                    "type": "string"
                  },
                  "metricsEnabled": {
                    "type": "string"
                  },
                  "logsEnabled": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  }
                },
                "variables": {},
                "resources": [
                  {
                    "type": "Microsoft.Web/sites/providers/diagnosticSettings",
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                    "location": "[parameters('location')]",
                    "dependsOn": [],
                    "properties": {
                      "workspaceId": "[parameters('logAnalytics')]",
                      "storageAccountId": "[parameters('storageAccount')]",
                      "metrics": [
                        {
                          "category": "AllMetrics",
                          "timeGrain": null,
                          "enabled": "[parameters('metricsEnabled')]",
                          "retentionPolicy": {
                            "days": 0,
                            "enabled": false
                          }
                        }
                      ],
                      "logs": [
                        {
                          "category": "AppServiceHTTPLogs",
                          "enabled": "[parameters('logsEnabled')]"
                        },
                        {
                          "category": "AppServiceConsoleLogs",
                          "enabled": "[parameters('logsEnabled')]"
                        },
                        {
                          "category": "AppServiceAppLogs",
                          "enabled": "[parameters('logsEnabled')]"
                        },
                        {
                          "category": "AppServiceAuditLogs",
                          "enabled": "[parameters('logsEnabled')]"
                        },
                        {
                          "category": "AppServiceIPSecAuditLogs",
                          "enabled": "[parameters('logsEnabled')]"
                        },
                        {
                          "category": "AppServicePlatformLogs",
                          "enabled": "[parameters('logsEnabled')]"
                        }
                      ]
                    }
                  }
                ],
                "outputs": {}
              },
              "parameters": {
                "profileName": {
                  "value": "[parameters('profileName')]"
                },
                "logAnalytics": {
                  "value": "[parameters('logAnalytics')]"
                },
                "storageAccount": {
                  "value": "[parameters('storageAccount')]"
                },
                "metricsEnabled": {
                  "value": "[parameters('metricsEnabled')]"
                },
                "logsEnabled": {
                  "value": "[parameters('logsEnabled')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              }
            }
          }
        }
      }
    }
  }
}