---
parameters:
  - name: stageName
  - name: serviceConnection
  - name: templateFile
  - name: templateParameterFile
  - name: parameters
    default:
  - name: condition
    default: true
  - name: previousStage
    default:
  - name: subscriptionId
    default:
  - name: managementGroupId
    default:
  - name: resourceGroupName
    default:
  - name: location
    default:
  - name: scope
    default:

stages:
  - stage: ${{ parameters.stageName }}
    pool:
      vmImage: 'ubuntu-latest'
    displayName: "${{ parameters.stageName }}"
    dependsOn: ${{ parameters.previousStage }}
    condition: ${{ parameters.condition }}

    jobs:
      - job: WhatIf
        displayName: "WhatIf"
        continueOnError: false

        steps:
          # Checkout Repos
          - checkout: self # Checkout the "synergy-au/azure-infrastructure-sap" repo
            name: checkoutRepository
            displayName: Checkout Repository
            submodules: true
            lfs: false
            clean: true
            continueOnError: false
            enabled: true

          # Restore the module from the Private Azure Container Registry
          - task: AzureCLI@2
            displayName: "AzCLI: Restore Bicep Modules"
            inputs:
              azureSubscription: ${{ parameters.serviceConnection }}
              scriptType: pscore
              scriptLocation: inlineScript
              inlineScript: |
                az bicep restore --file ${{ parameters.templateFile }}

          # Tenant Scope Deployment
          - task: AzureCLI@2
            displayName: "AzCLI: Test Tenant Deployment"
            condition: ${{ eq(parameters.scope, 'Tenant')}}
            enabled: true
            continueOnError: false
            inputs:
              azureSubscription: ${{ parameters.serviceConnection }}
              scriptType: pscore
              scriptLocation: inlineScript
              inlineScript: |
                az deployment tenant what-if `
                  --location ${{ parameters.location }} `
                  --template-file ${{ parameters.templateFile }} `
                  --parameters ${{ parameters.templateParameterFile }} `
                  --exclude-change-types Ignore NoChange Unsupported `
                  --result-format FullResourcePayloads
              powerShellErrorActionPreference: "stop"
              addSpnToEnvironment: false
              useGlobalConfig: false
              failOnStandardError: false
              powerShellIgnoreLASTEXITCODE: false

          # Management Group Scope Deployment
          - task: AzureCLI@2
            displayName: "AzCLI: Test Management Group Deployment"
            condition: ${{ eq(parameters.scope, 'ManagementGroup')}}
            enabled: true
            continueOnError: false
            inputs:
              azureSubscription: ${{ parameters.serviceConnection }}
              scriptType: pscore
              scriptLocation: inlineScript
              inlineScript: |
                az deployment mg what-if `
                  --location ${{ parameters.location }} `
                  --management-group-id ${{ parameters.managementGroupId }} `
                  --template-file ${{ parameters.templateFile }} `
                  --parameters ${{ parameters.templateParameterFile }} `
                  --exclude-change-types Ignore NoChange Unsupported `
                  --result-format FullResourcePayloads
              powerShellErrorActionPreference: "stop"
              addSpnToEnvironment: false
              useGlobalConfig: false
              failOnStandardError: false
              powerShellIgnoreLASTEXITCODE: false

          # Subscription Scope Deployment
          - task: AzureCLI@2
            displayName: "AzCLI: Test Subscription Deployment"
            condition: ${{ eq(parameters.scope, 'Subscription')}}
            enabled: true
            continueOnError: false
            inputs:
              azureSubscription: ${{ parameters.serviceConnection }}
              scriptType: pscore
              scriptLocation: inlineScript
              inlineScript: |
                az deployment sub what-if `
                  --location ${{ parameters.location }} `
                  --template-file ${{ parameters.templateFile }} `
                  --parameters ${{ parameters.templateParameterFile }} `
                  --exclude-change-types Ignore NoChange Unsupported `
                  --result-format FullResourcePayloads
              powerShellErrorActionPreference: "stop"
              addSpnToEnvironment: false
              useGlobalConfig: false
              failOnStandardError: false
              powerShellIgnoreLASTEXITCODE: false

          # Resource Group Scope Deployment
          - task: AzureCLI@2
            displayName: "AzCLI: Test Resource Group Deployment"
            condition: ${{ eq(parameters.scope, 'ResourceGroup')}}
            enabled: true
            continueOnError: false
            inputs:
              azureSubscription: ${{ parameters.serviceConnection }}
              scriptType: pscore
              scriptLocation: inlineScript
              inlineScript: |
                az deployment group what-if `
                  --resource-group ${{ parameters.resourceGroupName }} `
                  --template-file ${{ parameters.templateFile }} `
                  --parameters ${{ parameters.templateParameterFile }} `
                  --exclude-change-types Ignore NoChange Unsupported `
                  --result-format FullResourcePayloads
              powerShellErrorActionPreference: "stop"
              addSpnToEnvironment: false
              useGlobalConfig: false
              failOnStandardError: false
              powerShellIgnoreLASTEXITCODE: false